{"version":3,"sources":["webpack:///./src/sketch.js"],"names":["bird","pipes","perceptron","points","setup","createCanvas","Bird","push","Pipe","Perceptron","i","Point","drawLine","min","max","f","stroke","p1","p2","line","px","py","draw","background","show","update","x","guessYFn","forEach","pipe","hits","filter","isOffScreen","point","inputList","y","bias","target","label","train","guess","fill","noStroke","ellipse","frameCount","keyPressed","key","up"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;;AAEA,IAAIA,aAAJ;AACA,IAAIC,QAAQ,EAAZ;AACA,IAAIC,mBAAJ;AACA,IAAMC,SAAS,EAAf;AACA,SAASC,KAAT,GAAiB;AACfC,eAAa,GAAb,EAAkB,GAAlB;AACAL,SAAO,IAAIM,IAAJ,EAAP;AACAL,QAAMM,IAAN,CAAW,IAAIC,IAAJ,EAAX;;AAEAN,eAAa,IAAIO,UAAJ,EAAb;;AAGA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,GAApB,EAAyBA,GAAzB,EAA8B;AAC5BP,WAAOI,IAAP,CAAY,IAAII,KAAJ,EAAZ;AACD;AACF;;AAED,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,CAA5B,EAA+B;AAC7BC,SAAO,GAAP;AACA,MAAMC,KAAK,IAAIN,KAAJ,CAAUE,GAAV,EAAeE,EAAEF,GAAF,CAAf,CAAX;AACA,MAAMK,KAAK,IAAIP,KAAJ,CAAUG,GAAV,EAAeC,EAAED,GAAF,CAAf,CAAX;AACAK,OAAKF,GAAGG,EAAH,EAAL,EAAcH,GAAGI,EAAH,EAAd,EAAuBH,GAAGE,EAAH,EAAvB,EAAgCF,GAAGG,EAAH,EAAhC;AACD;;AAED,SAASC,IAAT,GAAgB;AACdC,aAAW,EAAX;AACAvB,OAAKwB,IAAL;AACAxB,OAAKyB,MAAL;AACAb,WAAS,CAAC,CAAV,EAAa,CAAb,EAAgB;AAAA,WAAK,MAAMc,CAAN,GAAU,GAAf;AAAA,GAAhB;AACAd,WAAS,CAAC,CAAV,EAAa,CAAb,EAAgBV,WAAWyB,QAA3B;AACA1B,QAAM2B,OAAN,CAAc,UAACC,IAAD,EAAU;AACtBA,SAAKL,IAAL;AACAK,SAAKJ,MAAL;AACAI,SAAKC,IAAL,CAAU9B,IAAV;AACD,GAJD;;AAMAC,UAAQA,MAAM8B,MAAN,CAAa;AAAA,WAAQ,CAACF,KAAKG,WAAL,EAAT;AAAA,GAAb,CAAR;;AAEA7B,SAAOyB,OAAP,CAAe,UAACK,KAAD,EAAW;AACxBA,UAAMT,IAAN;AACA,QAAMU,YAAY,CAACD,MAAMP,CAAP,EAAUO,MAAME,CAAhB,EAAmBF,MAAMG,IAAzB,CAAlB;AACA,QAAMC,SAASJ,MAAMK,KAArB;AACApC,eAAWqC,KAAX,CAAiBL,SAAjB,EAA4BG,MAA5B;AACA,QAAMG,QAAQtC,WAAWsC,KAAX,CAAiBN,SAAjB,CAAd;AACA,QAAIM,UAAUH,MAAd,EAAsB;AACpBI,WAAK,CAAL,EAAQ,GAAR,EAAa,CAAb;AACD,KAFD,MAEO;AACLA,WAAK,GAAL,EAAU,CAAV,EAAa,CAAb;AACD;AACDC;AACAC,YAAQV,MAAMb,EAAN,EAAR,EAAoBa,MAAMZ,EAAN,EAApB,EAAgC,CAAhC,EAAmC,CAAnC;AACD,GAbD;;AAeA,MAAIuB,aAAa,GAAb,IAAoB,CAAxB,EAA2B;AACzB3C,UAAMM,IAAN,CAAW,IAAIC,IAAJ,EAAX;AACD;AACF;;AAED,SAASqC,UAAT,GAAsB;AACpB,MAAIC,OAAO,GAAX,EAAgB;AACd9C,SAAK+C,EAAL;AACD;AACF,C","file":"app.bundle.js","sourcesContent":["// import { Bird } from './bird';\n// import { Pipe } from './pipe';\n// import { Perceptron } from './nn';\n\nlet bird;\nlet pipes = [];\nlet perceptron;\nconst points = [];\nfunction setup() {\n  createCanvas(400, 600);\n  bird = new Bird();\n  pipes.push(new Pipe());\n\n  perceptron = new Perceptron();\n  \n\n  for (let i = 0; i < 100; i++) {\n    points.push(new Point());\n  }\n}\n\nfunction drawLine(min, max, f) {\n  stroke(128);\n  const p1 = new Point(min, f(min));\n  const p2 = new Point(max, f(max));\n  line(p1.px(), p1.py(), p2.px(), p2.py());\n}\n\nfunction draw() {\n  background(21);\n  bird.show();\n  bird.update();\n  drawLine(-1, 1, x => 0.3 * x + 0.2);\n  drawLine(-1, 1, perceptron.guessYFn);\n  pipes.forEach((pipe) => {\n    pipe.show();\n    pipe.update();\n    pipe.hits(bird);\n  });\n\n  pipes = pipes.filter(pipe => !pipe.isOffScreen());\n\n  points.forEach((point) => {\n    point.show();\n    const inputList = [point.x, point.y, point.bias];\n    const target = point.label;\n    perceptron.train(inputList, target);\n    const guess = perceptron.guess(inputList);\n    if (guess === target) {\n      fill(0, 255, 0);\n    } else {\n      fill(255, 0, 0);\n    }\n    noStroke();\n    ellipse(point.px(), point.py(), 8, 8);\n  });\n\n  if (frameCount % 100 == 0) {\n    pipes.push(new Pipe());\n  }\n}\n\nfunction keyPressed() {\n  if (key == ' ') {\n    bird.up();\n  }\n}\n"],"sourceRoot":""}